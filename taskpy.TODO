TODO:

Must get done now:
- get epoch->YYYY-mm-dd converter
- fix the titlebar status info for block, wait, etc.
- note that #showing is a func of the bash shell prompt, so this
  should be coded into the system as a config variable
- curr bashTask uses two lines to display title
  crunch that into one line.  id/proj/etc still on left
  push task title to the right along with status info
  - if clever, adjust status info based on avail sapce
  
Longer Term Items

2011 July

- i should see if someone else wants to take this over.  you know, someone
  who knows how to write code 

- need to talk to paul and ask him if there is a programatic way to determine
  the columns that are available.  currently, i only see a list in one of the
  man pages

- the output parsing is rough at best.  it should be made more flexible, with
  even an eye to multiple line output.
  - how would this be easily codified?
  
- the display parameters are curr a silly array.  it owuld be nice if they
  were a file like .taskpyrc
  
- someone in the know needs to figure out if there are any odd python 
  dependencies.  i suspect that there are none (as my programming skills are
  weak enough to not use much out of the ordinary).
  - i am fairly certain that i am using deprecated commands/calls/functions/etc
    again, someone else will need to do that bit of code cleanup for me

- config so that taskpy looks for task and the .taskrc or pending database
  it should also make sure that it has file r/w permission somewhere
  
- global variable for date format  

- depending on distance, convert date from YYYY/MMM/DD (11 chars) to:
  - yest, today, tomorrow
  - {next|past} {Mon/Tue/Wed/...}
  - YYYY MMM DD

<<<<<<< HEAD
  
=======
- i should prob try to make this thing run faster...  for bash to be faster 
  than python is probably a bad thing
  
    $ time ./taskpy.py > /dev/null ; time ./taskpy.py > /dev/null; time ./taskpy.py > /dev/null
    
    real	0m0.522s
    user	0m0.467s
    sys	0m0.048s
    
    real	0m0.507s
    user	0m0.459s
    sys	0m0.041s
    
    real	0m0.552s
    user	0m0.500s
    sys	0m0.045s


    $ time t > /dev/null ; time t > /dev/null ; time t > /dev/null
    
    real	0m0.338s
    user	0m0.290s
    sys	0m0.067s
    
    real	0m0.328s
    user	0m0.285s
    sys	0m0.062s
    
    real	0m0.330s
    user	0m0.285s
    sys	0m0.064s
    
>>>>>>> dev-2011-07-11
  
